[{"content":"This is not finished How to host Hugo site on Github Pre-requisites   Github Account\n  Git (terminal utility)\n  How to change Directories in the terminal\n  Make a repo with the following name [username].github.io Please note that [username] indicates your own personal username.\nGet your Hugo files in order and place it in a folder designated for this project Make all neccesary changes you need to make to your content, config etc.\nClone the aformentioned repository to your local machine Example: git clone https://github.com/[username]/[username].github.io.git\nPlease note that [username] indicates your own personal username.\nWhile in the clone directory enter this in the terminal: git pull origin main\nmake sure that there are results and no errors\nEnter the Directory of your hugo site Note: Make sure your site is operational with command hugo server\nEnter this in the terminal:\nhugo -d ../[directory that contains the cloned repo]\nThis command essentially converts the hugo styled website files (content folder, config etc.)\nto a more general html file that works exactly like it would if your were running it with Hugo.\nRe-enter the cloned repo When you are here enter the follwing commands in the terminal:\ngit status\nThis should return quite a few red coloured file name, this means that they are new\nand are not offically apart of the repo.\ngit add --all\nThis tell Git to commit (upload) all of the files in this folder to the repo\ngit commit -m \u0026quot;Initial commit\u0026quot;\nThis offically adds all of the selected files to the commit list which\nwill we now upload to the repo\ngit push origin main\nThis is the final step. This tells Git to upload all of the files we had previously\nselected to the repo.\nExtra When you do a pull request on a branch, you can continue to work on another branch and make another pull request on this other branch.\nBefore creating a new branch, pull the changes from upstream. Your master needs to be up to date.\n$ git pull\nCreate the branch on your local machine and switch in this branch :\n$ git checkout -b [name_of_your_new_branch]\nPush the branch on github :\n$ git push origin [name_of_your_new_branch]\nWhen you want to commit something in your branch, be sure to be in your branch. Add -u parameter to set-upstream.\nYou can see all the branches created by using :\n$ git branch -a\n","description":"In this article we cover how to set up a Hugo website and host the entire website on Github's free hosting platform, Github Pages.","id":0,"section":"posts","tags":["tutorial","hugo","Github","Github Pages"],"title":"How to host Hugo website on Github Pages","uri":"https://m-GDEV.github.io/posts/github-pages-with-hugo/"},{"content":"Guide to Installing Linux (for beginners) Introduction Hello, this guide is for Linux beginners who are looking to try Linux out don\u0026rsquo;t know where to start. Below is a table of contents that outlines all the things we will be covering in this guide.\nSo what is Linux anyways? Linux is a family of open-source Unix-like operating systems based on the Linux kernel, an operating system kernel first released on September 17, 1991, by Linus Torvalds. Linux is typically packaged in a Linux distribution. Wikipedia\nIn simpler terms, Linux is a kernel which many distributions (a.k.a operating systems based off the kernel) are based off of, for example, Ubuntu, Pop!_OS, Arch Linux etc.\nWhat is a Desktop Environment? In computing, a desktop environment is an implementation of the desktop metaphor made of a bundle of programs running on top of a computer operating system that share a common graphical user interface, sometimes described as a graphical shell. Wikipedia\nSimply put, a Desktop Environment dictates how your GUI or Graphical User Interface looks. One of the biggest differences between Linux and Windows is the option to change the Desktop Environment.\nLinux has a multitude of Desktop Environment with each of them having their own quirks, advantages, and disadvantages.\nBelow are some of the most popular Desktop Environments used in Linux Distributions.\n  GNOME\n  XFCE\n  LXQT\n  MATE\n  Cinnamon\n  Choosing a Distribution What is a distribution anyways? A Linux distribution is an operating system made from a software collection that is based upon the Linux kernel and, often, a package management system. Wikipedia\nIt may come as a surprise to many, but there are many distributions made especially for beginners. With Installation process as simple as clicking a few buttons, minimal technological knowledge is actually necessary to install and even use it.\nHere are some of the best Linux Distributions for beginners Ubuntu This is by far one of the most popular distributions for Linux beginners as it gives all the functionality of Windows and Mac OS with little required by the user. It is an extremely easy-to-use operating system perfect for beginners. Ubuntu uses the GNOME Desktop Environment.\nLinux Mint This distribution is a very popular and provides a very user friendly experience. This Distribution is great for older computers as it consumes much less ram compared to Windows and other Linux Distributions. Linux Mint comes in may different Desktop Environments including Cinnamon, XFCE, and MATE.\nZorin OS Although Ubuntu is the most popular, many Linux enthusiasts recommend Zorin OS for anyone coming from Windows. Zorin OS comes with a bunch of useful pre-loaded applications such as Libre Office, a free alternative to Microsoft Office with all the same functionality. Zorin OS has on of the best, if not the best looking user interface out of the box. Zorin OS uses the GNOME Desktop Environment, however, they also have a light version of their Operating System called Zorin OS Lite, the latter uses the light-weight XFCE Desktop Environment.\nElementary OS Elementary OS is quite a popular Linux Distribution. It is has little to no bloat pre-installed and it closely resembles Mac OS. With simplicity in mind the developers chose to design the entire operating system around productivity and un-intrusive. This is a great Distribution for begginers because of its easy-to-use user interface and simple process to installing many useful applications.\nPeppermint OS Peppermint OS is a very lightweight and simple to use Distribution and is great for beginners. Peppermint does come with many programs pre-installed. The main focus of this Distribution is to provide its users with a extremely lightweight and simple user interface. With little no to experience using Linux, anyone can install this Distribution and aquire a firm grasp of how it works quite quickly.\nSummary All of the aforementioned Distributions are based on Ubuntu, meaning that at their cores they all use the same package manager and for the most part they have the same funtionality. With this in mind it is important to recognize that within these few options they are very similar and when choosing one of them niche and priorities are the most important factor. All of these have their own little tweaks and things that make them special.\nSo how do I install Linux? Here is what we need to do: - Finding a USB - Finding an ISO - Flashing the ISO onto the USB - Booting from the USB - Installing Linux Finding a USB Based on the size of the ISO we will need a 4-8 GB USB. 4 GB will most likely be fine. This is essential as we need space for all the required files and programs to help us install Linux.\nFinding an ISO Regardless of which Linux Distribution you have chosen the installion ISO will be neccesary. Google will be your best friend in this matter. The best way to find your ISO will be to google \u0026ldquo;Distribution Name ISO\u0026rdquo;.\nNow download the ISO and store it somewhere you can find it later.\nFlashing the ISO onto the USB This is a very step and requries a few simple clicks of a mouse. Visit Balena Etcher and click download.\nLaunch the program and plug in your USB, make sure there are no important files on it as the program will format the USB.\nClick \u0026ldquo;Flash from file\u0026rdquo; and select your downloaded ISO.\nClick \u0026ldquo;Select target\u0026rdquo; and select your USB.\nClick \u0026ldquo;Flash\u0026rdquo; and wait for 5-10 Minutes.\nOnce the USB is finished flashing, exit the program and turn off your computer.\nBooting from the USB This step is a little more complicated so be sure to pay attention.\nStep 1: Enter your bios This is quite simple if you know what you are doing. If not, google \u0026ldquo;How to enter bios on your computers model number and brand\u0026rdquo;.\nTypically, from a powered off state you turn on the computer and quicly press a specific key; usually this is the Delete key or on of the F* keys. This specific key varies from computer to computer.\nStep 2: Select the boot or startup tab Once you have entered the bios there should a tab at the top that reads \u0026ldquo;Boot\u0026rdquo; or \u0026ldquo;Startup\u0026rdquo;. Using the arrows key on your keyboard select the aforementioned tab.\nStep 3: Make your USB the top Boot priority At the bottom of your screen you should see controls that tell you how to change your boot priorities. This varies computer to computer.\nFind you USB in the boot priority list and move it too the top.\nStep 4: Booting from the USB Navigate to the exit tab, select \u0026ldquo;Save and Exit\u0026rdquo; and press enter. Your computer should now restart.\nWhen your computer restarts you should be prompted by a welcome screen of sorts with the name of the Linux Distribution you chose.\nInstalling Linux This process is very simple and needs no guidance. Simply follow the instructions on the installer and install. After doing so turn off your computer and remove the USB.\nNow restart your computer.\nAfter restarting your computer you may notice that there is a new promt that offer multiple boot options. This small program is called GRUB; this program allows you to choose which Operating System to boot from.\nCongratulaions! You have just succesfully installed linux!\nHow to install programs? Linux uses something called a package manager. Essentially this allows you to install many programs through one simple package manager.\nThere is one caviat though. There are quite a few different package managers in different Linux Distributions. APT is one of the most popular packages managers and is used in a variety of Distribuitons. It is used by all the previously mentioned Linux Distributions above.\nHow to install a program? Note: commands are inputted into the terminal, the terminal is a desktop app installed on all linux Distributions.\nsudo apt install *program name*\nThe above command is an example of how to install a program, of course there is a lot behind this command but as an introduction this is a great example.\nTo learn more I would suggest typing man apt.\nman is the in-house guide book installed on all linux Distributions. A large majority of programs have a man  page that explains how to use the program and how to use all of its features.\nExample: man *program name*\nConclusion I hope that this guide has helped you install Linux and I hope that it has helped you get a better grasp of Linux in general. Be sure to check out our other intresting articles!\n","description":"This is a short guide to help begginers get their bearings and understand the basics of Linux.","id":1,"section":"posts","tags":["tutorial","hugo"],"title":"Begginers introduciton to installing and understanding Linux.","uri":"https://m-GDEV.github.io/posts/linux/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":2,"section":"","tags":null,"title":"About","uri":"https://m-GDEV.github.io/about/"}]